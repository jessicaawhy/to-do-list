{"version":3,"sources":["webpack://theodinproject-todolist/./src/todo.js","webpack://theodinproject-todolist/./src/project.js","webpack://theodinproject-todolist/./src/index.js"],"names":["Todo","title","description","dueDate","priority","status","this","Project","name","tasks","newItem","push","element","splice","projectList","toggleDisplay","id","displaySetting","document","getElementById","style","display","addProject","value","console","log","project","projectContainer","createElement","innerHTML","classList","add","appendChild","deleteButton","addEventListener","e","target","closest","firstChild","remove","deleteProject","content","querySelector","sidebar","setAttribute","heading","projectListContainer","newProjectButton","addProjectsForm","newProjectLabel","newProjectInput","addProjectButton","createProjectPage"],"mappings":"mBAAA,MAAMA,EACJ,YAAYC,EAAOC,EAAaC,EAASC,EAAUC,GACjDC,KAAKL,MAAQA,EACbK,KAAKJ,YAAcA,EACnBI,KAAKH,QAAUA,EACfG,KAAKF,SAAWA,EAChBE,KAAKD,OAASA,GCJlB,MAAME,EACJ,YAAYC,GACVF,KAAKE,KAAOA,EACZF,KAAKG,MAAQ,GAGf,QAAQR,EAAOC,EAAaC,EAASC,EAAUC,GAC7C,IAAIK,EAAU,IAAIV,EAAKC,EAAOC,EAAaC,EAASC,EAAUC,GAC9DC,KAAKG,MAAME,KAAKD,GAGlB,WAAWE,GACTN,KAAKG,MAAMI,OAAOD,EAAS,GAG7B,SAASA,KCfe,MACxB,MAAME,EAAc,GAiDpB,SAASC,EAAcC,GACrB,MAAMC,EAAiBC,SAASC,eAAe,oBACV,SAAjCF,EAAeG,MAAMC,SAAuBJ,EAAeG,MAAMC,QAGnEJ,EAAeG,MAAMC,QAAU,OAF/BJ,EAAeG,MAAMC,QAAU,QAMnC,SAASC,IACP,MAAMd,EAAOU,SAASC,eAAe,cAAcI,MACnD,GAAIT,EAAYN,GACdgB,QAAQC,IAAI,kCACP,CACL,MAAMC,EAAU,IAAInB,EAAQC,GAC5BM,EAAYN,GAAQkB,EACpBR,SAASC,eAAe,cAAcI,MAAQ,GAE9C,MAAMI,EAAmBT,SAASU,cAAc,OAC1ChB,EAAUM,SAASU,cAAc,MACvChB,EAAQiB,UAAYrB,EACpBI,EAAQkB,UAAUC,IAAI,WACtBJ,EAAiBK,YAAYpB,GAC7B,MAAMqB,EAAef,SAASU,cAAc,UAC5CK,EAAaJ,UAAY,iBACzBI,EAAaC,iBAAiB,SAAUC,GAQ5C,SAAuBA,GACrB,MAAM3B,EAAO2B,EAAEC,OAAOC,QAAQ,OAAOC,WAAWT,iBACzCf,EAAYN,GAEJ2B,EAAEC,OAAOC,QAAQ,OACzBE,SAbyCC,CAAcL,KAC5DR,EAAiBK,YAAYC,GAELf,SAASC,eAAe,2BAChCa,YAAYL,KA5EhC,WACE,MAAMc,EAAUvB,SAASwB,cAAc,YAGjCC,EAAUzB,SAASU,cAAc,OACvCa,EAAQT,YAAYW,GACpBA,EAAQC,aAAa,KAAM,WAE3B,MAAMC,EAAU3B,SAASU,cAAc,MACvCiB,EAAQhB,UAAY,WACpBc,EAAQX,YAAYa,GAEpB,MAAMC,EAAuB5B,SAASU,cAAc,OACpDkB,EAAqBF,aAAa,KAAM,2BACxCD,EAAQX,YAAYc,GAEpB,MAAMC,EAAmB7B,SAASU,cAAc,UAChDe,EAAQX,YAAYe,GACpBA,EAAiBH,aAAa,KAAM,sBACpCG,EAAiBlB,UAAY,cAC7BkB,EAAiBb,iBAAiB,QAASnB,GAE3C,MAAMiC,EAAkB9B,SAASU,cAAc,QAC/Ce,EAAQX,YAAYgB,GACpBA,EAAgBJ,aAAa,KAAM,oBACnCI,EAAgBJ,aAAa,WAAY,gBAEzC,MAAMK,EAAkB/B,SAASU,cAAc,SAC/CoB,EAAgBhB,YAAYiB,GAC5BA,EAAgBL,aAAa,MAAO,QACpCK,EAAgBpB,UAAY,eAC5B,MAAMqB,EAAkBhC,SAASU,cAAc,SAC/CoB,EAAgBhB,YAAYkB,GAC5BA,EAAgBN,aAAa,OAAQ,QACrCM,EAAgBN,aAAa,OAAQ,QACrCM,EAAgBN,aAAa,KAAM,cACnCM,EAAgBN,aAAa,cAAe,QAE5C,MAAMO,EAAmBjC,SAASU,cAAc,UAChDoB,EAAgBhB,YAAYmB,GAC5BA,EAAiBP,aAAa,OAAQ,UACtCO,EAAiBP,aAAa,QAAS,UACvCO,EAAiBP,aAAa,KAAM,eACpCO,EAAiBtB,UAAY,SAC7BsB,EAAiBjB,iBAAiB,QAASZ,GA4C7C8B,IA3FwB,I","file":"main.js","sourcesContent":["class Todo {\n  constructor(title, description, dueDate, priority, status) {\n    this.title = title;\n    this.description = description;\n    this.dueDate = dueDate;\n    this.priority = priority;\n    this.status = status;\n  }\n}\n\nexport { Todo };\n","import { Todo } from './todo';\n\nclass Project {\n  constructor(name) {\n    this.name = name;\n    this.tasks = [];\n  }\n\n  addToDo(title, description, dueDate, priority, status) {\n    let newItem = new Todo(title, description, dueDate, priority, status);\n    this.tasks.push(newItem);\n  }\n\n  deleteToDo(element) {\n    this.tasks.splice(element, 1);\n  }\n\n  editToDo(element) {\n\n  }\n}\n\nexport { Project };\n","import { Project } from './project';\n\nconst projectController = (() => {\n  const projectList = {};\n\n  function createProjectPage() {\n    const content = document.querySelector('#content');\n\n    // Create sidebar element container\n    const sidebar = document.createElement('div');\n    content.appendChild(sidebar);\n    sidebar.setAttribute('id', 'sidebar');\n    // Add header\n    const heading = document.createElement('h1');\n    heading.innerHTML = 'Projects';\n    sidebar.appendChild(heading);\n    // Add project list container\n    const projectListContainer = document.createElement('div');\n    projectListContainer.setAttribute('id', 'projects-list-container');\n    sidebar.appendChild(projectListContainer);\n    // Add new project button for form display\n    const newProjectButton = document.createElement('button');\n    sidebar.appendChild(newProjectButton);\n    newProjectButton.setAttribute('id', 'new-project-button');\n    newProjectButton.innerHTML = 'New Project';\n    newProjectButton.addEventListener('click', toggleDisplay);\n    // Add new project form\n    const addProjectsForm = document.createElement('form');\n    sidebar.appendChild(addProjectsForm); // Maybe append somewhere else later. Make this modal type of form.\n    addProjectsForm.setAttribute('id', 'add-project-form');\n    addProjectsForm.setAttribute('onsubmit', 'return false');\n    // Create label and input\n    const newProjectLabel = document.createElement('label');\n    addProjectsForm.appendChild(newProjectLabel); // Maybe append somewhere else later. Make this modal type of form.\n    newProjectLabel.setAttribute('for', 'name');\n    newProjectLabel.innerHTML = 'Project Name';\n    const newProjectInput = document.createElement('input');\n    addProjectsForm.appendChild(newProjectInput); // Maybe append somewhere else later. Make this modal type of form.\n    newProjectInput.setAttribute('name', 'name');\n    newProjectInput.setAttribute('type', 'text');\n    newProjectInput.setAttribute('id', 'name-input');\n    newProjectInput.setAttribute('placeholder', 'Name');\n    // Add project elements to the page\n    const addProjectButton = document.createElement('button');\n    addProjectsForm.appendChild(addProjectButton); // Maybe append somewhere else later. Make this modal type of form.\n    addProjectButton.setAttribute('type', 'submit');\n    addProjectButton.setAttribute('value', 'Submit');\n    addProjectButton.setAttribute('id', 'add-project');\n    addProjectButton.innerHTML = 'Submit';\n    addProjectButton.addEventListener('click', addProject);\n  }\n\n  function toggleDisplay(id) {\n    const displaySetting = document.getElementById('add-project-form'); // swap out for id var\n    if (displaySetting.style.display === \"none\" || !displaySetting.style.display) {\n      displaySetting.style.display = \"block\";\n    } else {\n      displaySetting.style.display = \"none\";\n    }\n  }\n\n  function addProject() {\n    const name = document.getElementById(\"name-input\").value;\n    if (projectList[name]) {\n      console.log('Please choose another name'); // change this to a box alert later\n    } else {\n      const project = new Project(name);\n      projectList[name] = project;\n      document.getElementById(\"name-input\").value = '';\n  \n      const projectContainer = document.createElement('div');\n      const element = document.createElement('h3');\n      element.innerHTML = name;\n      element.classList.add('project');\n      projectContainer.appendChild(element);\n      const deleteButton = document.createElement('button');\n      deleteButton.innerHTML = 'Delete Project';\n      deleteButton.addEventListener('click', (e) => deleteProject(e));\n      projectContainer.appendChild(deleteButton);\n\n      const parentContainer = document.getElementById('projects-list-container');\n      parentContainer.appendChild(projectContainer);\n    }\n  }\n\n  function deleteProject(e) {\n    const name = e.target.closest('div').firstChild.innerHTML;\n    delete projectList[name];\n\n    const target = e.target.closest('div');\n    target.remove();\n  }\n\n  createProjectPage();\n})()\n"],"sourceRoot":""}